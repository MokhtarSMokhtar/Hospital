<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="DoctorPanal.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EAf/2Q==
</value>
  </data>
</root>